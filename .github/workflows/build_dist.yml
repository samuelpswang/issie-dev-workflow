on:
  # workflow_dispatch:
  #   inputs:
  #     release:
  #       description: 'Upload binaries to Releases page?'
  #       required: true
  #       type: boolean
  #     tag:
  #       description: 'Upload binaries to which tag?'
  #       required: true
  #       type: string
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  remove_previous_assets:
    runs-on: ubuntu-latest
    steps:
    - name: Get current release data
      id: latest_release
      uses: KevinRohn/github-full-release-data@v2
      with:
        repository: samuelpswang/issie-dev-workflow
        token: ${{ secrets.GITHUB_TOKEN }}
        version: latest
    - name: Check if this tag is a patch
      id: is_patch
      uses: actions/github-script@v7
      env:
        prev_tag: ${{ steps.latest_release.outputs.tag_name }}
        curr_tag: ${{ github.event_name == 'push' && github.ref_name || inputs.tag }}
      with:
        script: |
          const prev_tag = process.env.prev_tag;
          const curr_tag = process.env.curr_tag;
          const [prev_major, prev_minor] = prev_tag.split('.').map(Number);
          const [curr_major, curr_minor] = curr_tag.split('.').map(Number);
          return (prev_major === curr_major) && (prev_minor === curr_minor);
    - name: Delete current release
      if: ${{ steps.is_patch.outputs.result }}
      uses: liudonghua123/delete-release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.latest_release.outputs.id }}
    - name: Format current release body
      id: body_format
      if: ${{ steps.is_patch.outputs.result }}
      uses: actions/github-script@v7
      env:
        body: ${{ steps.latest_release.outputs.body }}
      with:
        script: |
          const body = process.env.body;
          return body.slice(1,-1);
        result-encoding: string
    - name: Re-create current release with new tag
      if: ${{ steps.is_patch.outputs.result }}
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event_name == 'push' && github.ref_name || inputs.tag }}
        name: ${{ steps.latest_release.outputs.name }}
        body: ${{ steps.body_format.outputs.result }}
    # - name: Create new release for new minor version
    #   if: ${{ ! steps.is_patch.outputs.result }}
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     draft: true
    #     body: New minor version pushed, release text work in progress.

  # build_dist:
  #   runs-on: macos-latest
  #   steps:
  #   - name: Checkout the repo
  #     uses: actions/checkout@v5
  #   - name: Set up .NET Core
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: '8.0.x'
  #   - name: Restore .NET tools and node packages - build.sh
  #     run: ./build.sh -t Build
  #   - name: Build app - build_dist.sh
  #     run: ./build_dist.sh
  #   - name: Deploy to releases page
  #     uses: softprops/action-gh-release@v2
  #     if: ${{ github.event_name == 'push' || inputs.release }}
  #     with:
  #       tag_name: ${{ github.event_name == 'push' && github.ref_name || inputs.tag }}
  #       files: dist/*

  # build_dist_linux_x64:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout the repo
  #     uses: actions/checkout@v5
  #   - name: Set up .NET Core
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: '8.0.x'
  #   - name: Restore .NET tools and node packages - build.sh
  #     run: ./build.sh -t Build
  #   - name: Build app - build_dist_linux_x64.sh
  #     run: ./build_dist_linux_x64.sh
  #   - name: Deploy to releases page
  #     uses: softprops/action-gh-release@v2
  #     if: ${{ github.event_name == 'push' || inputs.release }}
  #     with:
  #       tag_name: ${{ github.event_name == 'push' && github.ref_name || inputs.tag }}
  #       files: dist/*

# Force change 1
